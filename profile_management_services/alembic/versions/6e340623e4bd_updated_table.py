"""updated table 

Revision ID: 6e340623e4bd
Revises: cd57bee415dd
Create Date: 2025-01-12 22:13:57.739260

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6e340623e4bd'
down_revision: Union[str, None] = 'cd57bee415dd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_causes_id', table_name='user_causes')
    op.drop_table('user_causes')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_user_language_id', table_name='user_language')
    op.drop_table('user_language')
    op.drop_index('ix_institution_id', table_name='institution')
    op.drop_index('ix_institution_name', table_name='institution')
    op.drop_table('institution')
    op.drop_index('ix_Languages_id', table_name='Languages')
    op.drop_table('Languages')
    op.alter_column('about_user', 'about',
               existing_type=sa.VARCHAR(length=3000),
               nullable=False)
    op.drop_constraint('about_user_auth_user_id_key', 'about_user', type_='unique')
    op.alter_column('user_skills', 'skill_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('user_skills_skill_id_fkey', 'user_skills', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('user_skills_skill_id_fkey', 'user_skills', 'skills', ['skill_id'], ['id'])
    op.alter_column('user_skills', 'skill_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_unique_constraint('about_user_auth_user_id_key', 'about_user', ['auth_user_id'])
    op.alter_column('about_user', 'about',
               existing_type=sa.VARCHAR(length=3000),
               nullable=True)
    op.create_table('Languages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='Languages_pkey'),
    sa.UniqueConstraint('name', name='Languages_name_key')
    )
    op.create_index('ix_Languages_id', 'Languages', ['id'], unique=False)
    op.create_table('institution',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('full_address', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('logo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='institution_pkey')
    )
    op.create_index('ix_institution_name', 'institution', ['name'], unique=False)
    op.create_index('ix_institution_id', 'institution', ['id'], unique=False)
    op.create_table('user_language',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('auth_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('language_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('proficiency', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_language_pkey')
    )
    op.create_index('ix_user_language_id', 'user_language', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('otp', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('otp_expiry', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_multi_factor', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('roles', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('phone_number', name='users_phone_number_key')
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_table('user_causes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('auth_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cause_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_causes_pkey')
    )
    op.create_index('ix_user_causes_id', 'user_causes', ['id'], unique=False)
    # ### end Alembic commands ###
